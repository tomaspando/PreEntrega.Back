paths:
  /api/products:
    get:
      summary: "Retorna todos los productos disponibles"
      tags:
        - Products
      responses:
        "200":
          description: "OK"
          content: 
            application/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/Product"
        "500":
          description: "Error general"
    post:
      summary: "Cargar un producto"
      tags:
        - Products
      requestBody:
        description: "Datos a enviar en el body"
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/requestBodies/addProducts"
      responses:
        "200":
          description: "OK"
          content: 
            application/json:
              schema:
                type: objeto
                items:
                  $ref: "#/components/schemas/Product"
        "500":
          description: "Error general"

  /api/products/one/{id}:
    get:
      summary: "Retorna un producto por ID"
      tags:
        - Products
      parameters:
        - name: id
          in: path
          required: true
      responses:
        "200":
          description: "OK"
          content: 
            application/json:
              schema:
                type: objeto
                items:
                  $ref: "#/components/schemas/Product"
        "500":
          description: "Error general"
  /api/products/{id}:
    put:
      summary: "Actualiza un producto según su ID"
      tags:
        - Products
      parameters:
        - name: id
          in: path
          required: true
      responses:
        "200":
          description: "OK"
          content: 
            application/json:
              schema:
                type: objeto
                items:
                  $ref: "#/components/schemas/Product"
        "500":
          description: "Error general"
    delete:
      summary: "Elimina un producto según su ID"
      tags:
        - Products
      parameters:
        - name: id
          in: path
          required: true
      responses:
        "200":
          description: "OK"
          content: 
            application/json:
              schema:
                type: objeto
                items:
                  $ref: "#/components/schemas/Product"
        "500":
          description: "Error general"

components:
  schemas:
    Product:
      type: object
      properties:
        _id:
          type: objectId
          description: "ID MongoDB"
        title:
          type: string
          description: "Nombre del producto"
        description:
          type: string
          description: "Descripción del producto"
        price:
          type: number
          description: "Precio del producto"
        thumbnail:
          type: string
          description: "Imagen del producto"
        code:
          type: string
          description: "Código del producto"
        stock:
          type: number
          description: "Stock del producto"
        owner:
          type: string
          description: "Dueño del producto"
  requestBodies:
    addProducts:
      type: object
      properties:
        title:
          type: string
        description:
          type: string
        price:
          type: number
        thumbnail:
          type: strings
        code:
          type: string
        stock:
          type: number


